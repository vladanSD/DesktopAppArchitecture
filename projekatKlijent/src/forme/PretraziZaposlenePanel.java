/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Zaposleni;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import konstante.Konstante;
import model.modelTabeleZaposleni;
import transfer.TransferObject;
import util.AktivanPanel;

/**
 *
 * @author Vladan
 */
public class PretraziZaposlenePanel extends javax.swing.JPanel {
    private GlavnaForma glavna;
    TransferObject toZahtev = new TransferObject();
    TransferObject toOdgovor = new TransferObject();
    private IzmeniZaposlenogPanel izmeniZaposlenogPanel;
    /**
     * Creates new form DodajNoviUgovorPanel1
     */
    public PretraziZaposlenePanel(GlavnaForma g) {
        initComponents();
        this.glavna = g;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButtonIzmeni = new javax.swing.JButton();
        jButtonObrisi = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Pretrazi");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonIzmeni.setText("Izmeni");
        jButtonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniActionPerformed(evt);
            }
        });

        jButtonObrisi.setText("Obrisi");
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(15, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButtonIzmeni)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField1))
                        .addGap(30, 30, 30)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIzmeni)
                    .addComponent(jButtonObrisi))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 308, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Zaposleni z = new Zaposleni();
        z.setImeIPrezime(jTextField1.getText().trim());
        z.setStrucnaSprema(jTextField1.getText().trim());
        toZahtev.setOperacija(Konstante.VRATI_ZAPOSLENE_PO_KRITERIJUMU);
        toZahtev.setParametar(z);
        
        try {
            Komunikacija.getInstance().posalji(toZahtev);
            toOdgovor = Komunikacija.getInstance().procitaj();
        } catch (IOException ex) {
            Logger.getLogger(PretraziZaposlenePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PretraziZaposlenePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (!toOdgovor.getPoruka().equals("")) {
            JOptionPane.showMessageDialog(this, "Greška", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        List<Zaposleni> lista = (List<Zaposleni>) toOdgovor.getOdgovor();
        if(lista.isEmpty()){
            modelTabeleZaposleni model = new modelTabeleZaposleni(lista);
            jTable1.setModel(model);
            JOptionPane.showMessageDialog(this, "Ne postoje zaposleni po zadatom kriterijumu!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        modelTabeleZaposleni model = new modelTabeleZaposleni(lista);
            jTable1.setModel(model);
            JOptionPane.showMessageDialog(this, "Uspešna pretraga!", "Uspešno", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed
        // TODO add your handling code here:
        int red = jTable1.getSelectedRow();
        if(red==-1){
            JOptionPane.showMessageDialog(this, "Izaberite odredjenog zaposlenog!","Greška",JOptionPane.ERROR_MESSAGE);
            return;
        }
        modelTabeleZaposleni model = (modelTabeleZaposleni) jTable1.getModel();
        Zaposleni z = model.vratiZaposlenog(red);
        toZahtev.setOperacija(Konstante.OBRISI_ZAPOSLENOG);
        toZahtev.setParametar(z);
        try {
            Komunikacija.getInstance().posalji(toZahtev);
            toOdgovor = Komunikacija.getInstance().procitaj();
        } catch (IOException ex) {
            Logger.getLogger(PretraziZaposlenePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PretraziZaposlenePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
         if (!toOdgovor.getPoruka().equals("")) {
            JOptionPane.showMessageDialog(this, "Zaposleni ima aktivne radne smene.", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
         JOptionPane.showMessageDialog(this, "Uspešno ste obrisali zaposlenog!");
         sredi();
         
        
    }//GEN-LAST:event_jButtonObrisiActionPerformed

    private void jButtonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniActionPerformed
        // TODO add your handling code here:
        int red = jTable1.getSelectedRow();
        if(red == -1){
            JOptionPane.showMessageDialog(this, "Morate da izaberete red!");
            return;
        }
        modelTabeleZaposleni model = (modelTabeleZaposleni) jTable1.getModel();
        Zaposleni z = model.vratiZaposlenog(red);
        //glavna.pozoviUpdateZaposlenog(z, glavna);
     
        toZahtev.setOperacija(Konstante.DETALJI_ZAPOSLENOG);
        toZahtev.setParametar(z);
        try {
            Komunikacija.getInstance().posalji(toZahtev);
            toOdgovor = Komunikacija.getInstance().procitaj();
            if (!toOdgovor.getPoruka().equals("")) {
                    System.out.println(toOdgovor.getPoruka());
                    JOptionPane.showMessageDialog(this, toOdgovor.getPoruka(), "Greška", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            z = (Zaposleni) toOdgovor.getOdgovor();
            glavna.pozoviUpdateZaposlenog(z, glavna);
           
           
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
       // glavna.pozoviUpdateZaposlenog(z, glavna);
    }//GEN-LAST:event_jButtonIzmeniActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonIzmeni;
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

 public void sredi() {
        toZahtev.setOperacija(Konstante.VRATI_ZAPOSLENE);
        try {
            Komunikacija.getInstance().posalji(toZahtev);
            toOdgovor = Komunikacija.getInstance().procitaj();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        if (!toOdgovor.getPoruka().equals("")) {
            JOptionPane.showMessageDialog(this, toOdgovor.getPoruka(), "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        modelTabeleZaposleni model = new modelTabeleZaposleni((List<Zaposleni>) toOdgovor.getOdgovor());
        jTable1.setModel(model);
            
        }

}


