/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Koordinator;
import domen.RadneSmene;
import domen.Ugovori;
import domen.Zaposleni;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import komunikacija.Komunikacija;
import logovanje.Logovanje;
import transfer.TransferObject;
import konstante.Konstante;
import util.AktivanPanel;

/**
 *
 * @author Nikola
 */
public class GlavnaForma extends javax.swing.JFrame {

    TransferObject toZahtev = new TransferObject();
    TransferObject toOdgovor = new TransferObject();
    private JPanel activePanel;
    private DodajNoviUgovorPanel dodajNoviUgovorPanel;
    private DodajNovogZaposlenogPanel dodajNovogZaposlenogPanel;
    private DodajNovuSmenuPanel dodajNovuSmenuPanel;
    private PregledSmenaPanel pregledSmenaPanel;
    private PretragaUgovoraPanel pretragaUgovoraPanel;
    private PretraziZaposlenePanel pretraziZaposlenePanel;
    private IzmeniZaposlenogPanel izmeniZaposlenogPanel;
    private DetaljiUgovoraPanel detaljiUgovoraPanel;
    private IzmeniRadnuSmenuPanel izmeniRadnuSmenuPanel;
    

    /**
     * Creates new form GlavnaFrm
     */
    public GlavnaForma() {
        initComponents();
        this.dodajNoviUgovorPanel = new DodajNoviUgovorPanel(this);
        this.dodajNovogZaposlenogPanel = new DodajNovogZaposlenogPanel(this);
        this.dodajNovuSmenuPanel = new DodajNovuSmenuPanel(this);
        this.pregledSmenaPanel = new PregledSmenaPanel(this);
        this.pretragaUgovoraPanel = new PretragaUgovoraPanel(this);
        this.pretraziZaposlenePanel = new PretraziZaposlenePanel(this);
        
        setSize(new Dimension(600, 600));
        center();
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jmb_glavniMeni = new javax.swing.JMenuBar();
        jm_klijent = new javax.swing.JMenu();
        jmi_dodajNoviUgovor = new javax.swing.JMenuItem();
        jmi_pretragaUgovora = new javax.swing.JMenuItem();
        jm_racun = new javax.swing.JMenu();
        jmi_dodajNovogZaposlenog = new javax.swing.JMenuItem();
        jmi_pretragaZaposlenih = new javax.swing.JMenuItem();
        jm_prijava = new javax.swing.JMenu();
        jmi_DodajNovuSmenu = new javax.swing.JMenuItem();
        jmi_pretragaSmena = new javax.swing.JMenuItem();
        jm_logovanje = new javax.swing.JMenu();
        jmi_izlogujSe = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Firma za obezbedjenje");
        setResizable(false);
        setSize(new java.awt.Dimension(240, 225));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        jm_klijent.setText("Ugovori");

        jmi_dodajNoviUgovor.setText("Dodaj novi ugovor");
        jmi_dodajNoviUgovor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_dodajNoviUgovorActionPerformed(evt);
            }
        });
        jm_klijent.add(jmi_dodajNoviUgovor);

        jmi_pretragaUgovora.setText("Pretraga ugovora");
        jmi_pretragaUgovora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_pretragaUgovoraActionPerformed(evt);
            }
        });
        jm_klijent.add(jmi_pretragaUgovora);

        jmb_glavniMeni.add(jm_klijent);

        jm_racun.setText("Zaposleni");

        jmi_dodajNovogZaposlenog.setText("Dodaj novog zaposlenog");
        jmi_dodajNovogZaposlenog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_dodajNovogZaposlenogActionPerformed(evt);
            }
        });
        jm_racun.add(jmi_dodajNovogZaposlenog);

        jmi_pretragaZaposlenih.setText("Pretraga zaposlenih");
        jmi_pretragaZaposlenih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_pretragaZaposlenihActionPerformed(evt);
            }
        });
        jm_racun.add(jmi_pretragaZaposlenih);

        jmb_glavniMeni.add(jm_racun);

        jm_prijava.setText("Raspored");

        jmi_DodajNovuSmenu.setText("Dodaj novu smenu");
        jmi_DodajNovuSmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_DodajNovuSmenuActionPerformed(evt);
            }
        });
        jm_prijava.add(jmi_DodajNovuSmenu);

        jmi_pretragaSmena.setText("Pregled smena");
        jmi_pretragaSmena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_pretragaSmenaActionPerformed(evt);
            }
        });
        jm_prijava.add(jmi_pretragaSmena);

        jmb_glavniMeni.add(jm_prijava);

        jm_logovanje.setText("Logovanje");

        jmi_izlogujSe.setText("Izloguj se");
        jmi_izlogujSe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_izlogujSeActionPerformed(evt);
            }
        });
        jm_logovanje.add(jmi_izlogujSe);

        jmb_glavniMeni.add(jm_logovanje);

        setJMenuBar(jmb_glavniMeni);

        getAccessibleContext().setAccessibleName("Firma");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmi_dodajNoviUgovorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_dodajNoviUgovorActionPerformed
        this.dodajNoviUgovorPanel.sredi();
        zameniAktivniPanel(AktivanPanel.UNOS_UGOVORA);
    }//GEN-LAST:event_jmi_dodajNoviUgovorActionPerformed

    private void jmi_pretragaUgovoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_pretragaUgovoraActionPerformed
        this.pretragaUgovoraPanel.sredi();
        zameniAktivniPanel(AktivanPanel.PRETRAGA_UGOVORA);
    }//GEN-LAST:event_jmi_pretragaUgovoraActionPerformed

    private void jmi_dodajNovogZaposlenogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_dodajNovogZaposlenogActionPerformed
       
        zameniAktivniPanel(AktivanPanel.UNOS_ZAPOSLENOG);
    }//GEN-LAST:event_jmi_dodajNovogZaposlenogActionPerformed

    private void jmi_pretragaZaposlenihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_pretragaZaposlenihActionPerformed
        this.pretraziZaposlenePanel.sredi();
        zameniAktivniPanel(AktivanPanel.PRETRAGA_ZAPOSLENOG);
    }//GEN-LAST:event_jmi_pretragaZaposlenihActionPerformed

    private void jmi_DodajNovuSmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_DodajNovuSmenuActionPerformed
        this.dodajNovuSmenuPanel.sredi();
        zameniAktivniPanel(AktivanPanel.UNOS_RASPOREDA);
    }//GEN-LAST:event_jmi_DodajNovuSmenuActionPerformed

    private void jmi_pretragaSmenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_pretragaSmenaActionPerformed
        this.pregledSmenaPanel.sredi();
        zameniAktivniPanel(AktivanPanel.PRETRAGA_RASPOREDA);
    }//GEN-LAST:event_jmi_pretragaSmenaActionPerformed

    private void jmi_izlogujSeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_izlogujSeActionPerformed
        toZahtev.setOperacija(Konstante.IZLOGUJ_SE);
        toZahtev.setParametar(Logovanje.getInstance().getUlogovaniKoordinator());
        try {
            Komunikacija.getInstance().posalji(toZahtev);
            toOdgovor = Komunikacija.getInstance().procitaj();
            if (!toOdgovor.getPoruka().equals("")) {
                JOptionPane.showMessageDialog(this, toOdgovor.getPoruka(), "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
            this.dispose();
            Logovanje.getInstance().setUlogovaniKoordinator(null);
            new LogIn().setVisible(true);
        } catch (IOException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jmi_izlogujSeActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Koordinator r = Logovanje.getInstance().getUlogovaniKoordinator();
        
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        toZahtev.setOperacija(Konstante.IZLOGUJ_SE);
        toZahtev.setParametar(Logovanje.getInstance().getUlogovaniKoordinator());
        try {
            Komunikacija.getInstance().posalji(toZahtev);
            toOdgovor = Komunikacija.getInstance().procitaj();
            if (!toOdgovor.getPoruka().equals("")) {
                JOptionPane.showMessageDialog(this, toOdgovor.getPoruka(), "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }

            toZahtev.setOperacija(Konstante.KRAJ_RADA);
            Komunikacija.getInstance().posalji(toZahtev);
            toOdgovor = Komunikacija.getInstance().procitaj();
            if (!toOdgovor.getPoruka().equals("")) {
                JOptionPane.showMessageDialog(this, toOdgovor.getPoruka(), "Greška", JOptionPane.ERROR_MESSAGE);
            }
        } catch (IOException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jm_klijent;
    private javax.swing.JMenu jm_logovanje;
    private javax.swing.JMenu jm_prijava;
    private javax.swing.JMenu jm_racun;
    private javax.swing.JMenuBar jmb_glavniMeni;
    private javax.swing.JMenuItem jmi_DodajNovuSmenu;
    private javax.swing.JMenuItem jmi_dodajNoviUgovor;
    private javax.swing.JMenuItem jmi_dodajNovogZaposlenog;
    private javax.swing.JMenuItem jmi_izlogujSe;
    private javax.swing.JMenuItem jmi_pretragaSmena;
    private javax.swing.JMenuItem jmi_pretragaUgovora;
    private javax.swing.JMenuItem jmi_pretragaZaposlenih;
    // End of variables declaration//GEN-END:variables

    public void zameniAktivniPanel(AktivanPanel active) {
        if (activePanel != null) {
            remove(activePanel);
        }

        switch (active) {
            case UNOS_ZAPOSLENOG:
                activePanel = dodajNovogZaposlenogPanel;
                break;
            case PRETRAGA_ZAPOSLENOG:
                activePanel = pretraziZaposlenePanel;
                break;
            case UNOS_UGOVORA:
                activePanel = dodajNoviUgovorPanel;
                break;
            case PRETRAGA_UGOVORA:
                activePanel = pretragaUgovoraPanel;
                break;
            case UNOS_RASPOREDA:
                activePanel = dodajNovuSmenuPanel;
                break;
            case PRETRAGA_RASPOREDA:
                activePanel = pregledSmenaPanel;
                break;
            case IZMENA_ZAPOSLENOG:
                activePanel = izmeniZaposlenogPanel;
                break;
            case DETALJI_UGOVORA:
                activePanel = detaljiUgovoraPanel;
                break;
            case IZMENA_RADNESMENE:
                activePanel = izmeniRadnuSmenuPanel;
                break;
            default:
                activePanel = null;
        }

        if (activePanel != null) {
            add(activePanel);
            activePanel.revalidate();
            activePanel.repaint();
            pack();
            center();
        }
    }
    public void pozoviUpdateZaposlenog(Zaposleni z, GlavnaForma glavnaForma){
            izmeniZaposlenogPanel = new IzmeniZaposlenogPanel(z, glavnaForma);
            zameniAktivniPanel(AktivanPanel.IZMENA_ZAPOSLENOG);
    }
    
    public void pozoviDetaljeUgovoraPanel(Ugovori u, GlavnaForma glavnaForma){
            detaljiUgovoraPanel = new DetaljiUgovoraPanel(u, glavnaForma);
            zameniAktivniPanel(AktivanPanel.DETALJI_UGOVORA);
    }
    
    public void pozoviUpdateSmene(RadneSmene smena, GlavnaForma glavna){
            izmeniRadnuSmenuPanel = new IzmeniRadnuSmenuPanel(smena, glavna);
            zameniAktivniPanel(AktivanPanel.IZMENA_RADNESMENE);
    }

    

    public void center() {
        //this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
    }
}
